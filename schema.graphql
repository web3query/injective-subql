# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

type Account @entity {
  "Account address"
  id: ID!

  "Block height that we inserted in database"
  blockHeight: Int!

  "Block timestamp"
  timestamp: BigInt!

  "Chain id i.e injective-1"
  chainId: String!
}

type AccountBalance @entity {
  "Account address"
  id: ID!

  "Block height that we inserted in database"
  blockHeight: Int!

  "Block timestamp"
  timestamp: BigInt!

  "Amount"
  amount: BigInt!

  "Account"
  account: Account!

  "Chain id i.e injective-1"
  chainId: String!
}

type Contract @entity {
  "Address of the contract"
  id: ID!

  "Block height that we inserted contract in database"
  blockHeight: Int!

  "Timestamp of the block"
  timestamp: BigInt!

  "Chain id i.e injective-1"
  chainId: String!

  transactions: [ContractTransaction!] @derivedFrom(field: "contract")
}

type Transaction @entity {
  "{hash}-{index in block}"
  id: ID!

  "Block height that we inserted in database"
  blockHeight: Int!

  "Block timestamp"
  timestamp: BigInt!

  "success or failed"
  status: String!

  "Chain id i.e injective-1"
  chainId: String!

  "Denom is in fee information"
  denom: String

  "Amount of gas being used at tx execution"
  gasUsed: BigInt!
}

type ContractTransaction @entity {
  "{hash}-{contract address}"
  id: ID!

  "Block height that we inserted in database"
  blockHeight: Int!

  "Timestamp of the block"
  timestamp: BigInt!

  "success or failed"
  status: String!

  "Chain id i.e injective-1"
  chainId: String!

  "Denom is in fee information"
  denom: String

  "Total gas used during contract executions"
  gasUsed: BigInt!

  contract: Contract!
}

type SpotLimitOrder @entity {
  id: ID!
  blockHeight: BigInt!
  txHash: String!
  from: String! # sender
  marketID: String!
  orderType: String!
  subAccountID: String!
  feeRecipient: String!
  price: BigInt!
  quantity: BigInt!
  amount: BigInt!
}
